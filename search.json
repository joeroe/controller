[{"path":"https://controller.joeroe.io/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 controller authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://controller.joeroe.io/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joe Roe. Author, maintainer, copyright holder.","code":""},{"path":"https://controller.joeroe.io/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Roe J (2023). controller: Controlled Vocabularies Authority Control. https://controller.joeroe.io, https://github.com/joeroe/controller.","code":"@Manual{,   title = {controller: Controlled Vocabularies and Authority Control},   author = {Joe Roe},   year = {2023},   note = {https://controller.joeroe.io, https://github.com/joeroe/controller}, }"},{"path":"https://controller.joeroe.io/index.html","id":"controller","dir":"","previous_headings":"","what":"Controlled Vocabularies and Authority Control","title":"Controlled Vocabularies and Authority Control","text":"controller collection functions working controlled vocabularies R. introduces control() verb, recodes values vector using lookup table preferred variant terms (thesaurus).","code":""},{"path":"https://controller.joeroe.io/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Controlled Vocabularies and Authority Control","text":"can install development version controlled GitHub using remotes package:","code":"remotes::install_github(\"joeroe/controller\")"},{"path":"https://controller.joeroe.io/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Controlled Vocabularies and Authority Control","text":"common data-tidying problem standardising variant terms concept. Imagine dataset uses number different names shades colour. data analysts, naturally want recode data eliminate messy creativity, example using dplyr::recode(): recoding way can tedious, especially large number terms. control(), can instead use data frame containing thesaurus replace values: control() also supports fuzzy matching, removing need exhaustively list variants common causes differing terminology. example, perform case insensitive match thesaurus:","code":"library(dplyr, warn.conflicts = FALSE) shades <- c(\"daffodil\", \"purple\", \"magenta\", \"azure\", \"navy\", \"violet\")  recode(shades,        daffodil = \"yellow\",        purple = \"purple\",        magenta = \"pink\",        azure = \"blue\",        navy = \"blue\",        violet = \"purple\") #> [1] \"yellow\" \"purple\" \"pink\"   \"blue\"   \"blue\"   \"purple\" library(controller) data(\"colour_thesaurus\")  control(shades, colour_thesaurus) #> Replaced values: #> ℹ daffodil → yellow #> ℹ azure → blue #> ℹ navy → blue #> ℹ violet → purple #> Warning: Some values of `x` were not matched in `thesaurus`: #> ✖ magenta #> [1] \"yellow\"  \"purple\"  \"magenta\" \"blue\"    \"blue\"    \"purple\" shades <- toupper(shades) control_ci(shades, colour_thesaurus) #> Replaced values: #> ℹ DAFFODIL → yellow #> ℹ PURPLE → purple #> ℹ AZURE → blue #> ℹ NAVY → blue #> ℹ VIOLET → purple #> Warning: Some values of `x` were not matched in `thesaurus`: #> ✖ MAGENTA #> [1] \"yellow\"  \"purple\"  \"MAGENTA\" \"blue\"    \"blue\"    \"purple\""},{"path":"https://controller.joeroe.io/reference/colour_thesaurus.html","id":null,"dir":"Reference","previous_headings":"","what":"Colour thesaurus — colour_thesaurus","title":"Colour thesaurus — colour_thesaurus","text":"dataset colour names based Ingrid Sundberg's \"colour thesaurus\". Contains 240 names shades 12 colours, formatted use thesaurus control().","code":""},{"path":"https://controller.joeroe.io/reference/colour_thesaurus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colour thesaurus — colour_thesaurus","text":"","code":"colour_thesaurus"},{"path":"https://controller.joeroe.io/reference/colour_thesaurus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Colour thesaurus — colour_thesaurus","text":"data frame 240 rows 2 variables: colour preferred colour name: \"white\", \"tan\", \"yellow\", \"orange\", \"red\", \"pink\", \"purple\", \"blue\", \"green\", \"brown\", \"grey\", \"black\" shade variant names shades colour","code":""},{"path":"https://controller.joeroe.io/reference/colour_thesaurus.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Colour thesaurus — colour_thesaurus","text":"https://ingridsundberg.com/2014/02/04/-color-thesaurus/","code":""},{"path":"https://controller.joeroe.io/reference/control.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode values using a thesaurus — control","title":"Recode values using a thesaurus — control","text":"control() verb replaces values vector values looked thesaurus. similar switch() dplyr::recode(), replacement values specified data frame instead individual arguments. default control() replaces values x exactly match terms thesaurus. Additional arguments allow case insensitive fuzzy matching strategies (see details). control_ci() control_fuzzy() convenience aliases case insensitive exact matching full fuzzy matching respectively.","code":""},{"path":"https://controller.joeroe.io/reference/control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode values using a thesaurus — control","text":"","code":"control(   x,   thesaurus,   case_insensitive = FALSE,   fuzzy_boundary = FALSE,   fuzzy_encoding = FALSE,   quiet = FALSE,   warn_unmatched = TRUE,   coalesce = TRUE )  control_ci(x, thesaurus, ...)  control_fuzzy(x, thesaurus, ...)"},{"path":"https://controller.joeroe.io/reference/control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode values using a thesaurus — control","text":"x Vector recode. thesaurus Data frame two columns: vector preferred terms, vector variants. case_insensitive Set TRUE perform case insensitive matching. fuzzy_boundary Set TRUE perform fuzzy matching ignores differences word boundaries used (e.g. \"foo bar\" matches \"foo-bar\"). fuzzy_encoding Set TRUE perform fuzzy matching ignores non-ASCII characters may encoded differently (e.g. \"foo\" matches \"foö\"). quiet Set TRUE suppress messages replaced values. warn_unmatched TRUE (default), issues warning values matched thesaurus. coalesce TRUE (default), return closest matches x. FALSE, return matches. ... control_ci() control_fuzzy, arguments passed control().","code":""},{"path":"https://controller.joeroe.io/reference/control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode values using a thesaurus — control","text":"coalesce = TRUE (default), vector length x values matching variants thesaurus replaced preferred term. coalesce = FALSE, data frame number rows x, columns type match (e.g. exact, case_insensitive, fuzzy_boundary, fuzzy_encoding). default gives message listing replaced values warning listing values matched thesaurus. can suppressed quiet = TRUE warn_unmatched = FALSE respectively.","code":""},{"path":"https://controller.joeroe.io/reference/control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode values using a thesaurus — control","text":"","code":"data(colour_thesaurus)  # Exact matching x <- c(\"red\", \"lipstick\", \"green\", \"mint\", \"blue\", \"azure\") control(x, colour_thesaurus) #> Replaced values: #> ℹ lipstick → red #> ℹ mint → green #> ℹ azure → blue #> [1] \"red\"   \"red\"   \"green\" \"green\" \"blue\"  \"blue\"   # Case insensitive matching x <- toupper(x) control_ci(x, colour_thesaurus) #> Replaced values: #> ℹ RED → red #> ℹ LIPSTICK → red #> ℹ GREEN → green #> ℹ MINT → green #> ℹ BLUE → blue #> ℹ AZURE → blue #> [1] \"red\"   \"red\"   \"green\" \"green\" \"blue\"  \"blue\"   # coalesce = FALSE returns all matches as a data frame, which can be useful # for debugging: control(x, colour_thesaurus, case_insensitive = TRUE, coalesce = FALSE) #> Replaced values: #> ℹ RED → red #> ℹ LIPSTICK → red #> ℹ GREEN → green #> ℹ MINT → green #> ℹ BLUE → blue #> ℹ AZURE → blue #>   exact case_insensitive #> 1  <NA>              red #> 2  <NA>              red #> 3  <NA>            green #> 4  <NA>            green #> 5  <NA>             blue #> 6  <NA>             blue"},{"path":"https://controller.joeroe.io/reference/controller-package.html","id":null,"dir":"Reference","previous_headings":"","what":"controller: Controlled Vocabularies and Authority Control — controller-package","title":"controller: Controlled Vocabularies and Authority Control — controller-package","text":"Functions working controlled vocabularies authority control.","code":""},{"path":[]},{"path":"https://controller.joeroe.io/reference/controller-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"controller: Controlled Vocabularies and Authority Control — controller-package","text":"Maintainer: Joe Roe joe@joeroe.io (ORCID) [copyright holder]","code":""},{"path":"https://controller.joeroe.io/reference/read_fish.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a FISH controlled vocabulary — read_fish","title":"Read a FISH controlled vocabulary — read_fish","text":"Reads controlled vocabularies Historic England's FISH (Forum Information Standards Heritage) group. can downloaded : http://www.heritage-standards.org.uk/fish-vocabularies/.","code":""},{"path":"https://controller.joeroe.io/reference/read_fish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a FISH controlled vocabulary — read_fish","text":"","code":"read_fish(path)"},{"path":"https://controller.joeroe.io/reference/read_fish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a FISH controlled vocabulary — read_fish","text":"path Path URL vocabulary FISH's CSV format. Can either .zip archive directory containing already uncompressed files.","code":""},{"path":"https://controller.joeroe.io/reference/read_fish.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a FISH controlled vocabulary — read_fish","text":"data frame two columns: preferred term.","code":""},{"path":"https://controller.joeroe.io/reference/read_fish.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read a FISH controlled vocabulary — read_fish","text":"Forum Information Standards Heritage, \"FISH Thesaurus Table Structure\", Available : http://www.heritage-standards.org.uk/fish-vocabularies/.","code":""},{"path":"https://controller.joeroe.io/news/index.html","id":"controller-0009000","dir":"Changelog","previous_headings":"","what":"controller 0.0.0.9000","title":"controller 0.0.0.9000","text":"Added control() Added example dataset colour_thesaurus Added NEWS.md file track changes package.","code":""}]
